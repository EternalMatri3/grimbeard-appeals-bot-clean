{"version":3,"sources":["../../../src/preconditions/UserPermissions.ts"],"names":["AllFlowsPrecondition","PermissionsBitField","PermissionFlagsBits","Identifiers","ClientPrecondition","container"],"mappings":"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","file":"UserPermissions.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport {\n\tChatInputCommandInteraction,\n\tContextMenuCommandInteraction,\n\tPermissionFlagsBits,\n\tPermissionsBitField,\n\ttype Message,\n\ttype NewsChannel,\n\ttype TextChannel\n} from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport type { Command } from '../lib/structures/Command';\nimport { AllFlowsPrecondition } from '../lib/structures/Precondition';\nimport { CorePrecondition as ClientPrecondition, type PermissionPreconditionContext } from './ClientPermissions';\n\nexport class CorePrecondition extends AllFlowsPrecondition {\n\tprivate readonly dmChannelPermissions = new PermissionsBitField(\n\t\t~new PermissionsBitField([\n\t\t\tPermissionFlagsBits.AddReactions,\n\t\t\tPermissionFlagsBits.AttachFiles,\n\t\t\tPermissionFlagsBits.EmbedLinks,\n\t\t\tPermissionFlagsBits.ReadMessageHistory,\n\t\t\tPermissionFlagsBits.SendMessages,\n\t\t\tPermissionFlagsBits.UseExternalEmojis,\n\t\t\tPermissionFlagsBits.ViewChannel,\n\t\t\tPermissionFlagsBits.UseExternalStickers,\n\t\t\tPermissionFlagsBits.MentionEveryone\n\t\t]).bitfield & PermissionsBitField.All\n\t).freeze();\n\n\tpublic messageRun(message: Message, _command: Command, context: PermissionPreconditionContext): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new PermissionsBitField();\n\t\tconst channel = message.channel as TextChannel | NewsChannel;\n\t\tconst permissions = message.guild ? channel.permissionsFor(message.author) : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'message');\n\t}\n\n\tpublic chatInputRun(\n\t\tinteraction: ChatInputCommandInteraction,\n\t\t_command: Command,\n\t\tcontext: PermissionPreconditionContext\n\t): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new PermissionsBitField();\n\t\tconst permissions = interaction.guildId ? interaction.memberPermissions : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'chat input');\n\t}\n\n\tpublic contextMenuRun(\n\t\tinteraction: ContextMenuCommandInteraction,\n\t\t_command: Command,\n\t\tcontext: PermissionPreconditionContext\n\t): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new PermissionsBitField();\n\t\tconst permissions = interaction.guildId ? interaction.memberPermissions : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'context menu');\n\t}\n\n\tprivate sharedRun(\n\t\trequiredPermissions: PermissionsBitField,\n\t\tavailablePermissions: PermissionsBitField | null,\n\t\tcommandType: string\n\t): AllFlowsPrecondition.Result {\n\t\tif (!availablePermissions) {\n\t\t\treturn this.error({\n\t\t\t\tidentifier: Identifiers.PreconditionUserPermissionsNoPermissions,\n\t\t\t\tmessage: `I was unable to resolve the end-user's permissions in the ${commandType} command invocation channel.`\n\t\t\t});\n\t\t}\n\n\t\tconst missing = availablePermissions.missing(requiredPermissions);\n\t\treturn missing.length === 0\n\t\t\t? this.ok()\n\t\t\t: this.error({\n\t\t\t\t\tidentifier: Identifiers.PreconditionUserPermissions,\n\t\t\t\t\tmessage: `You are missing the following permissions to run this command: ${missing\n\t\t\t\t\t\t.map((perm) => ClientPrecondition.readablePermissions[perm])\n\t\t\t\t\t\t.join(', ')}`,\n\t\t\t\t\tcontext: { missing }\n\t\t\t\t});\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'UserPermissions',\n\tpiece: CorePrecondition,\n\tstore: 'preconditions'\n});\n"]}