{"version":3,"sources":["../../../src/preconditions/Cooldown.ts"],"names":["AllFlowsPrecondition","time","TimestampStyles","Identifiers","BucketScope","RateLimitManager","container"],"mappings":"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","file":"Cooldown.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { RateLimitManager } from '@sapphire/ratelimits';\nimport {\n\tTimestampStyles,\n\ttime,\n\ttype ChatInputCommandInteraction,\n\ttype CommandInteraction,\n\ttype ContextMenuCommandInteraction,\n\ttype Message,\n\ttype Snowflake\n} from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport type { Command } from '../lib/structures/Command';\nimport { AllFlowsPrecondition } from '../lib/structures/Precondition';\nimport { BucketScope } from '../lib/types/Enums';\n\nexport interface CooldownPreconditionContext extends AllFlowsPrecondition.Context {\n\tscope?: BucketScope;\n\tdelay: number;\n\tlimit?: number;\n\tfilteredUsers?: Snowflake[];\n}\n\nexport class CorePrecondition extends AllFlowsPrecondition {\n\tpublic buckets: WeakMap<Command, RateLimitManager<string>> = new WeakMap<Command, RateLimitManager<string>>();\n\n\tpublic messageRun(message: Message, command: Command, context: CooldownPreconditionContext): AllFlowsPrecondition.Result {\n\t\tconst cooldownId = this.getIdFromMessage(message, context);\n\n\t\treturn this.sharedRun(message.author.id, command, context, cooldownId, 'message');\n\t}\n\n\tpublic chatInputRun(\n\t\tinteraction: ChatInputCommandInteraction,\n\t\tcommand: Command,\n\t\tcontext: CooldownPreconditionContext\n\t): AllFlowsPrecondition.Result {\n\t\tconst cooldownId = this.getIdFromInteraction(interaction, context);\n\n\t\treturn this.sharedRun(interaction.user.id, command, context, cooldownId, 'chat input');\n\t}\n\n\tpublic contextMenuRun(\n\t\tinteraction: ContextMenuCommandInteraction,\n\t\tcommand: Command,\n\t\tcontext: CooldownPreconditionContext\n\t): AllFlowsPrecondition.Result {\n\t\tconst cooldownId = this.getIdFromInteraction(interaction, context);\n\n\t\treturn this.sharedRun(interaction.user.id, command, context, cooldownId, 'context menu');\n\t}\n\n\tprivate sharedRun(\n\t\tauthorId: string,\n\t\tcommand: Command,\n\t\tcontext: CooldownPreconditionContext,\n\t\tcooldownId: string,\n\t\tcommandType: string\n\t): AllFlowsPrecondition.Result {\n\t\t// If the command it is testing for is not this one, return ok:\n\t\tif (context.external) return this.ok();\n\n\t\t// If there is no delay (undefined, null, 0), return ok:\n\t\tif (!context.delay) return this.ok();\n\n\t\t// If the user has provided any filtered users and the authorId is in that array, return ok:\n\t\tif (context.filteredUsers?.includes(authorId)) return this.ok();\n\n\t\tconst rateLimit = this.getManager(command, context).acquire(cooldownId);\n\n\t\tif (rateLimit.limited) {\n\t\t\tconst remaining = rateLimit.remainingTime;\n\t\t\tconst nextAvailable = time(Math.floor(rateLimit.expires / 1000), TimestampStyles.RelativeTime);\n\n\t\t\treturn this.error({\n\t\t\t\tidentifier: Identifiers.PreconditionCooldown,\n\t\t\t\tmessage: `There is a cooldown in effect for this ${commandType} command. It'll be available ${nextAvailable}.`,\n\t\t\t\tcontext: { remaining }\n\t\t\t});\n\t\t}\n\n\t\trateLimit.consume();\n\t\treturn this.ok();\n\t}\n\n\tprivate getIdFromMessage(message: Message, context: CooldownPreconditionContext) {\n\t\tswitch (context.scope) {\n\t\t\tcase BucketScope.Global:\n\t\t\t\treturn 'global';\n\t\t\tcase BucketScope.Channel:\n\t\t\t\treturn message.channelId;\n\t\t\tcase BucketScope.Guild:\n\t\t\t\treturn message.guildId ?? message.channelId;\n\t\t\tdefault:\n\t\t\t\treturn message.author.id;\n\t\t}\n\t}\n\n\tprivate getIdFromInteraction(interaction: CommandInteraction, context: CooldownPreconditionContext) {\n\t\tswitch (context.scope) {\n\t\t\tcase BucketScope.Global:\n\t\t\t\treturn 'global';\n\t\t\tcase BucketScope.Channel:\n\t\t\t\treturn interaction.channelId;\n\t\t\tcase BucketScope.Guild:\n\t\t\t\treturn interaction.guildId ?? interaction.channelId;\n\t\t\tdefault:\n\t\t\t\treturn interaction.user.id;\n\t\t}\n\t}\n\n\tprivate getManager(command: Command, context: CooldownPreconditionContext) {\n\t\tlet manager = this.buckets.get(command);\n\t\tif (!manager) {\n\t\t\tmanager = new RateLimitManager(context.delay, context.limit);\n\t\t\tthis.buckets.set(command, manager);\n\t\t}\n\t\treturn manager;\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'Cooldown',\n\tpiece: CorePrecondition,\n\tstore: 'preconditions'\n});\n"]}