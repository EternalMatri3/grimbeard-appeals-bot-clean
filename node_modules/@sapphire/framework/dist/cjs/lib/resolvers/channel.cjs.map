{"version":3,"sources":["../../../../src/lib/resolvers/channel.ts"],"names":["ChannelMentionRegex","container","Result","Identifiers"],"mappings":";;;;;;;;;AAMO,SAAS,cAAA,CACf,WACA,oBAAA,EACyD;AACzD,EAAA,MAAM,YAAaA,uCAAA,CAAoB,IAAA,CAAK,SAAS,CAAA,GAAI,CAAC,CAAA,IAAK,SAAA;AAC/D,EAAA,MAAM,OAAA,GAAA,CAAW,oBAAA,CAAqB,KAAA,GAAQ,oBAAA,CAAqB,KAAA,CAAM,QAAA,GAAWC,gBAAA,CAAU,MAAA,CAAO,QAAA,EAAU,KAAA,CAAM,GAAA,CAAI,SAAS,CAAA;AAElI,EAAA,IAAI,OAAA,EAAS;AACZ,IAAA,OAAOC,aAAA,CAAO,GAAG,OAAuB,CAAA;AAAA,EACzC;AAEA,EAAA,OAAOA,aAAA,CAAO,GAAA,CAAIC,2BAAA,CAAY,oBAAoB,CAAA;AACnD;AAZgB,MAAA,CAAA,cAAA,EAAA,gBAAA,CAAA","file":"channel.cjs","sourcesContent":["import { ChannelMentionRegex, type ChannelTypes } from '@sapphire/discord.js-utilities';\nimport { container } from '@sapphire/pieces';\nimport { Result } from '@sapphire/result';\nimport type { CommandInteraction, Message, Snowflake } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveChannel(\n\tparameter: string,\n\tmessageOrInteraction: Message | CommandInteraction\n): Result<ChannelTypes, Identifiers.ArgumentChannelError> {\n\tconst channelId = (ChannelMentionRegex.exec(parameter)?.[1] ?? parameter) as Snowflake;\n\tconst channel = (messageOrInteraction.guild ? messageOrInteraction.guild.channels : container.client.channels).cache.get(channelId);\n\n\tif (channel) {\n\t\treturn Result.ok(channel as ChannelTypes);\n\t}\n\n\treturn Result.err(Identifiers.ArgumentChannelError);\n}\n"]}