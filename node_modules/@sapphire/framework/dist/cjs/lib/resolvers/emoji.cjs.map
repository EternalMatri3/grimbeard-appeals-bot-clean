{"version":3,"sources":["../../../../src/lib/resolvers/emoji.ts"],"names":["createTwemojiRegex","Result","EmojiRegex","parseEmoji","Identifiers"],"mappings":";;;;;;;;;AAKA,IAAM,eAAeA,mCAAA,EAAmB;AAEjC,SAAS,aAAa,SAAA,EAAqD;AACjF,EAAA,MAAM,UAAU,YAAA,CAAa,IAAA,CAAK,SAAS,CAAA,GAAI,CAAC,CAAA,IAAK,IAAA;AAErD,EAAA,YAAA,CAAa,SAAA,GAAY,CAAA;AAEzB,EAAA,IAAI,OAAA,EAAS;AACZ,IAAA,OAAOC,cAAO,EAAA,CAAgB;AAAA,MAC7B,IAAA,EAAM,OAAA;AAAA,MACN,EAAA,EAAI;AAAA,KACJ,CAAA;AAAA,EACF;AAEA,EAAA,MAAM,OAAA,GAAUC,2BAAA,CAAW,IAAA,CAAK,SAAS,CAAA;AAEzC,EAAA,IAAI,OAAA,EAAS;AACZ,IAAA,MAAM,QAAA,GAAWC,sBAAW,SAAS,CAAA;AAErC,IAAA,IAAI,QAAA,EAAU;AACb,MAAA,OAAOF,aAAA,CAAO,GAAG,QAAQ,CAAA;AAAA,IAC1B;AAAA,EACD;AAEA,EAAA,OAAOA,aAAA,CAAO,GAAA,CAAIG,2BAAA,CAAY,kBAAkB,CAAA;AACjD;AAvBgB,MAAA,CAAA,YAAA,EAAA,cAAA,CAAA","file":"emoji.cjs","sourcesContent":["import { EmojiRegex, createTwemojiRegex } from '@sapphire/discord-utilities';\nimport { Result } from '@sapphire/result';\nimport { parseEmoji } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nconst TwemojiRegex = createTwemojiRegex();\n\nexport function resolveEmoji(parameter: string): Result<EmojiObject, Identifiers> {\n\tconst twemoji = TwemojiRegex.exec(parameter)?.[0] ?? null;\n\n\tTwemojiRegex.lastIndex = 0;\n\n\tif (twemoji) {\n\t\treturn Result.ok<EmojiObject>({\n\t\t\tname: twemoji,\n\t\t\tid: null\n\t\t});\n\t}\n\n\tconst emojiId = EmojiRegex.test(parameter);\n\n\tif (emojiId) {\n\t\tconst resolved = parseEmoji(parameter) as EmojiObject | null;\n\n\t\tif (resolved) {\n\t\t\treturn Result.ok(resolved);\n\t\t}\n\t}\n\n\treturn Result.err(Identifiers.ArgumentEmojiError);\n}\n\nexport interface EmojiObject {\n\tname: string | null;\n\tid: string | null;\n\tanimated?: boolean;\n}\n"]}