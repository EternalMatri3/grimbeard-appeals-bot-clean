{"version":3,"sources":["../../../../src/lib/resolvers/enum.ts"],"names":["Result","Identifiers"],"mappings":";;;;;;;AAGO,SAAS,WAAA,CACf,WACA,OAAA,EACqF;AACrF,EAAA,IAAI,CAAC,OAAA,EAAS,IAAA,EAAM,MAAA,EAAQ;AAC3B,IAAA,OAAOA,aAAA,CAAO,GAAA,CAAIC,2BAAA,CAAY,sBAAsB,CAAA;AAAA,EACrD;AAEA,EAAA,IAAI,CAAC,QAAQ,eAAA,IAAmB,CAAC,QAAQ,IAAA,CAAK,QAAA,CAAS,SAAS,CAAA,EAAG;AAClE,IAAA,OAAOD,aAAA,CAAO,GAAA,CAAIC,2BAAA,CAAY,iBAAiB,CAAA;AAAA,EAChD;AAEA,EAAA,IAAI,OAAA,CAAQ,eAAA,IAAmB,CAAC,OAAA,CAAQ,KAAK,IAAA,CAAK,CAAC,CAAA,KAAM,CAAA,CAAE,WAAA,EAAY,KAAM,SAAA,CAAU,WAAA,EAAa,CAAA,EAAG;AACtG,IAAA,OAAOD,aAAA,CAAO,GAAA,CAAIC,2BAAA,CAAY,iBAAiB,CAAA;AAAA,EAChD;AAEA,EAAA,OAAOD,aAAA,CAAO,GAAG,SAAS,CAAA;AAC3B;AAjBgB,MAAA,CAAA,WAAA,EAAA,aAAA,CAAA","file":"enum.cjs","sourcesContent":["import { Result } from '@sapphire/result';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveEnum(\n\tparameter: string,\n\toptions?: { enum?: string[]; caseInsensitive?: boolean }\n): Result<string, Identifiers.ArgumentEnumEmptyError | Identifiers.ArgumentEnumError> {\n\tif (!options?.enum?.length) {\n\t\treturn Result.err(Identifiers.ArgumentEnumEmptyError);\n\t}\n\n\tif (!options.caseInsensitive && !options.enum.includes(parameter)) {\n\t\treturn Result.err(Identifiers.ArgumentEnumError);\n\t}\n\n\tif (options.caseInsensitive && !options.enum.some((v) => v.toLowerCase() === parameter.toLowerCase())) {\n\t\treturn Result.err(Identifiers.ArgumentEnumError);\n\t}\n\n\treturn Result.ok(parameter);\n}\n"]}