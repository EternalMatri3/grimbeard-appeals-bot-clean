{"version":3,"sources":["../../../src/arguments/CoreBoolean.ts"],"names":["Argument","resolveBoolean","container"],"mappings":";;;;;;;;AAKO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAAA,CAAkB;AAAA,EAC5C,YAAY,OAAA,EAAiC;AACnD,IAAA,KAAA,CAAM,OAAA,EAAS,EAAE,IAAA,EAAM,SAAA,EAAW,CAAA;AAAA,EACnC;AAAA,EAEO,GAAA,CAAI,WAAmB,OAAA,EAA2D;AACxF,IAAA,MAAM,QAAA,GAAWC,0BAAA,CAAe,SAAA,EAAW,EAAE,MAAA,EAAQ,QAAQ,MAAA,EAAQ,MAAA,EAAQ,OAAA,CAAQ,MAAA,EAAQ,CAAA;AAC7F,IAAA,OAAO,QAAA,CAAS,UAAA;AAAA,MAAW,CAAC,UAAA,KAC3B,IAAA,CAAK,KAAA,CAAM;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAA,EAAS,4CAAA;AAAA,QACT;AAAA,OACA;AAAA,KACF;AAAA,EACD;AACD,CAAA;AAhBoD,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAA7C,IAAM,YAAA,GAAN;AAkBP,KAAKC,gBAAA,CAAU,OAAO,SAAA,CAAU;AAAA,EAC/B,IAAA,EAAM,SAAA;AAAA,EACN,KAAA,EAAO,YAAA;AAAA,EACP,KAAA,EAAO;AACR,CAAC,CAAA","file":"CoreBoolean.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { resolveBoolean } from '../lib/resolvers/boolean';\nimport { Argument } from '../lib/structures/Argument';\nimport type { BooleanArgumentContext } from '../lib/types/ArgumentContexts';\n\nexport class CoreArgument extends Argument<boolean> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'boolean' });\n\t}\n\n\tpublic run(parameter: string, context: BooleanArgumentContext): Argument.Result<boolean> {\n\t\tconst resolved = resolveBoolean(parameter, { truths: context.truths, falses: context.falses });\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: 'The argument did not resolve to a boolean.',\n\t\t\t\tcontext\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'boolean',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}