{"version":3,"sources":["../../../../src/optional-listeners/error-listeners/CoreInteractionHandlerParseError.ts"],"names":["Listener","Events"],"mappings":";;;;;;;AAGO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAAA,CAAqD;AAAA,EAC/E,YAAY,OAAA,EAAiC;AACnD,IAAA,KAAA,CAAM,OAAA,EAAS,EAAE,KAAA,EAAOC,iBAAA,CAAO,8BAA8B,CAAA;AAAA,EAC9D;AAAA,EAEO,GAAA,CAAI,OAAgB,OAAA,EAA8C;AACxE,IAAA,MAAM,EAAE,IAAA,EAAM,QAAA,EAAS,GAAI,OAAA,CAAQ,OAAA;AACnC,IAAA,IAAA,CAAK,UAAU,MAAA,CAAO,KAAA;AAAA,MACrB,CAAA,8FAAA,EAAiG,IAAI,CAAA,WAAA,EAAc,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MAChI;AAAA,KACD;AAAA,EACD;AACD,CAAA;AAZuF,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAAhF,IAAM,YAAA,GAAN","file":"CoreInteractionHandlerParseError.cjs","sourcesContent":["import { Listener } from '../../lib/structures/Listener';\nimport { Events, type InteractionHandlerParseError as InteractionHandlerParseErrorPayload } from '../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.InteractionHandlerParseError> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.InteractionHandlerParseError });\n\t}\n\n\tpublic run(error: unknown, context: InteractionHandlerParseErrorPayload) {\n\t\tconst { name, location } = context.handler;\n\t\tthis.container.logger.error(\n\t\t\t`Encountered error while handling an interaction handler parse method for interaction-handler \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n"]}