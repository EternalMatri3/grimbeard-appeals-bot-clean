{"version":3,"sources":["../../../../src/lib/resolvers/guildChannel.ts"],"names":[],"mappings":";;;;;AAMO,SAAS,mBAAA,CAAoB,WAAmB,KAAA,EAAqF;AAC3I,EAAA,MAAM,UAAU,WAAA,CAAY,SAAA,EAAW,KAAK,CAAA,IAAK,cAAA,CAAe,WAAW,KAAK,CAAA;AAEhF,EAAA,IAAI,OAAA,EAAS;AACZ,IAAA,OAAO,MAAA,CAAO,GAAG,OAAO,CAAA;AAAA,EACzB;AAEA,EAAA,OAAO,MAAA,CAAO,GAAA,CAAI,WAAA,CAAY,yBAAyB,CAAA;AACxD;AARgB,MAAA,CAAA,mBAAA,EAAA,qBAAA,CAAA;AAUhB,SAAS,WAAA,CAAY,UAAkB,KAAA,EAA6C;AACnF,EAAA,MAAM,YAAY,mBAAA,CAAoB,IAAA,CAAK,QAAQ,CAAA,IAAK,cAAA,CAAe,KAAK,QAAQ,CAAA;AACpF,EAAA,OAAO,SAAA,GAAc,MAAM,QAAA,CAAS,KAAA,CAAM,IAAI,SAAA,CAAU,CAAC,CAAc,CAAA,IAAgC,IAAA,GAAQ,IAAA;AAChH;AAHS,MAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AAKT,SAAS,cAAA,CAAe,UAAkB,KAAA,EAA6C;AACtF,EAAA,MAAM,iBAAA,GAAoB,SAAS,WAAA,EAAY;AAC/C,EAAA,OAAQ,KAAA,CAAM,QAAA,CAAS,KAAA,CAAM,IAAA,CAAK,CAAC,OAAA,KAAY,OAAA,CAAQ,IAAA,CAAK,WAAA,EAAY,KAAM,iBAAiB,CAAA,IAAgC,IAAA;AAChI;AAHS,MAAA,CAAA,cAAA,EAAA,gBAAA,CAAA","file":"guildChannel.mjs","sourcesContent":["import { ChannelMentionRegex, SnowflakeRegex } from '@sapphire/discord-utilities';\nimport type { GuildBasedChannelTypes } from '@sapphire/discord.js-utilities';\nimport { Result } from '@sapphire/result';\nimport type { Guild, Snowflake } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveGuildChannel(parameter: string, guild: Guild): Result<GuildBasedChannelTypes, Identifiers.ArgumentGuildChannelError> {\n\tconst channel = resolveById(parameter, guild) ?? resolveByQuery(parameter, guild);\n\n\tif (channel) {\n\t\treturn Result.ok(channel);\n\t}\n\n\treturn Result.err(Identifiers.ArgumentGuildChannelError);\n}\n\nfunction resolveById(argument: string, guild: Guild): GuildBasedChannelTypes | null {\n\tconst channelId = ChannelMentionRegex.exec(argument) ?? SnowflakeRegex.exec(argument);\n\treturn channelId ? ((guild.channels.cache.get(channelId[1] as Snowflake) as GuildBasedChannelTypes) ?? null) : null;\n}\n\nfunction resolveByQuery(argument: string, guild: Guild): GuildBasedChannelTypes | null {\n\tconst lowerCaseArgument = argument.toLowerCase();\n\treturn (guild.channels.cache.find((channel) => channel.name.toLowerCase() === lowerCaseArgument) as GuildBasedChannelTypes) ?? null;\n}\n"]}