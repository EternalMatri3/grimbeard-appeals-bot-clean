{"version":3,"sources":["../../../../src/lib/resolvers/partialDMChannel.ts"],"names":[],"mappings":";;;;;;AAMO,SAAS,uBAAA,CACf,WACA,OAAA,EAC8G;AAC9G,EAAA,MAAM,MAAA,GAAS,cAAA,CAAe,SAAA,EAAW,OAAO,CAAA;AAChD,EAAA,OAAO,MAAA,CAAO,OAAA,CAAQ,CAAC,OAAA,KAAY;AAClC,IAAA,IAAI,WAAA,CAAY,OAAO,CAAA,EAAG;AACzB,MAAA,OAAO,MAAA,CAAO,GAAG,OAAO,CAAA;AAAA,IACzB;AAEA,IAAA,OAAO,MAAA,CAAO,GAAA,CAAwC,WAAA,CAAY,sBAAsB,CAAA;AAAA,EACzF,CAAC,CAAA;AACF;AAZgB,MAAA,CAAA,uBAAA,EAAA,yBAAA,CAAA","file":"partialDMChannel.mjs","sourcesContent":["import { isDMChannel } from '@sapphire/discord.js-utilities';\nimport { Result } from '@sapphire/result';\nimport type { DMChannel, Message, PartialDMChannel } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\nimport { resolveChannel } from './channel';\n\nexport function resolvePartialDMChannel(\n\tparameter: string,\n\tmessage: Message\n): Result<DMChannel | PartialDMChannel, Identifiers.ArgumentChannelError | Identifiers.ArgumentDMChannelError> {\n\tconst result = resolveChannel(parameter, message);\n\treturn result.mapInto((channel) => {\n\t\tif (isDMChannel(channel)) {\n\t\t\treturn Result.ok(channel);\n\t\t}\n\n\t\treturn Result.err<Identifiers.ArgumentDMChannelError>(Identifiers.ArgumentDMChannelError);\n\t});\n}\n"]}