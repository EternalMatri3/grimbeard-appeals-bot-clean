{"version":3,"sources":["../../../../../../src/lib/utils/preconditions/conditions/PreconditionConditionOr.ts"],"names":[],"mappings":"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","file":"PreconditionConditionOr.mjs","sourcesContent":["import { Result } from '@sapphire/result';\nimport type { PreconditionContainerResult } from '../IPreconditionContainer';\nimport type { IPreconditionCondition } from './IPreconditionCondition';\n\n/**\n * An {@link IPreconditionCondition} which runs all containers similarly to doing (V0 || V1 [|| V2 [|| V3 ...]]).\n * @since 1.0.0\n */\nexport const PreconditionConditionOr: IPreconditionCondition = {\n\tasync messageSequential(message, command, entries, context) {\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const child of entries) {\n\t\t\tconst result = await child.messageRun(message, command, context);\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t},\n\tasync messageParallel(message, command, entries, context) {\n\t\tconst results = await Promise.all(entries.map((entry) => entry.messageRun(message, command, context)));\n\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const result of results) {\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t},\n\tasync chatInputSequential(interaction, command, entries, context) {\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const child of entries) {\n\t\t\tconst result = await child.chatInputRun(interaction, command, context);\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t},\n\tasync chatInputParallel(interaction, command, entries, context) {\n\t\tconst results = await Promise.all(entries.map((entry) => entry.chatInputRun(interaction, command, context)));\n\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const result of results) {\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t},\n\tasync contextMenuSequential(interaction, command, entries, context) {\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const child of entries) {\n\t\t\tconst result = await child.contextMenuRun(interaction, command, context);\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t},\n\tasync contextMenuParallel(interaction, command, entries, context) {\n\t\tconst results = await Promise.all(entries.map((entry) => entry.contextMenuRun(interaction, command, context)));\n\n\t\tlet error: PreconditionContainerResult | null = null;\n\t\tfor (const result of results) {\n\t\t\tif (result.isOk()) return result;\n\t\t\terror = result;\n\t\t}\n\n\t\treturn error ?? Result.ok();\n\t}\n};\n"]}