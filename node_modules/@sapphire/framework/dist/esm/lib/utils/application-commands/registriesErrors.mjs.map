{"version":3,"sources":["../../../../../src/lib/utils/application-commands/registriesErrors.ts"],"names":[],"mappings":";;;;;AAUO,SAAS,oBAAA,CAAqB,OAAgB,OAAA,EAA4B;AAChF,EAAA,MAAM,EAAE,IAAA,EAAM,QAAA,EAAS,GAAI,OAAA;AAC3B,EAAA,MAAM,EAAE,MAAA,EAAQ,MAAA,EAAO,GAAI,SAAA;AAE3B,EAAA,IAAI,MAAA,CAAO,aAAA,CAAc,MAAA,CAAO,sCAAsC,CAAA,EAAG;AACxE,IAAA,MAAA,CAAO,IAAA,CAAK,MAAA,CAAO,sCAAA,EAAwC,KAAA,EAAO,OAAO,CAAA;AAAA,EAC1E,CAAA,MAAO;AACN,IAAA,MAAA,CAAO,KAAA;AAAA,MACN,CAAA,uFAAA,EAA0F,IAAI,CAAA,WAAA,EAAc,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MACzH;AAAA,KACD;AAAA,EACD;AACD;AAZgB,MAAA,CAAA,oBAAA,EAAA,sBAAA,CAAA;AAmBT,SAAS,sBAAA,CAAuB,OAAgB,OAAA,EAAwB;AAC9E,EAAA,MAAM,EAAE,QAAO,GAAI,SAAA;AAEnB,EAAA,IAAI,MAAA,CAAO,aAAA,CAAc,MAAA,CAAO,8CAA8C,CAAA,EAAG;AAChF,IAAA,MAAA,CAAO,IAAA,CAAK,MAAA,CAAO,8CAAA,EAAgD,KAAA,EAAO,OAAO,CAAA;AAAA,EAClF,WAAW,OAAA,EAAS;AACnB,IAAA,kBAAA,CAAmB,CAAA,yDAAA,EAA4D,OAAO,CAAA,CAAA,EAAI,KAAK,CAAA;AAAA,EAChG,CAAA,MAAO;AACN,IAAA,kBAAA,CAAmB,mDAAmD,KAAK,CAAA;AAAA,EAC5E;AACD;AAVgB,MAAA,CAAA,sBAAA,EAAA,wBAAA,CAAA","file":"registriesErrors.mjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { Command } from '../../structures/Command';\nimport { Events } from '../../types/Events';\nimport { bulkOverwriteError } from './registriesLog';\n\n/**\n * Opinionatedly logs the encountered registry error.\n * @param error The emitted error\n * @param command The command which had the error\n */\nexport function emitPerRegistryError(error: unknown, command: Command<any, any>) {\n\tconst { name, location } = command;\n\tconst { client, logger } = container;\n\n\tif (client.listenerCount(Events.CommandApplicationCommandRegistryError)) {\n\t\tclient.emit(Events.CommandApplicationCommandRegistryError, error, command);\n\t} else {\n\t\tlogger.error(\n\t\t\t`Encountered error while handling the command application command registry for command \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n\n/**\n * Opinionatedly logs any bulk overwrite registries error.\n * @param error The emitted error\n * @param guildId The guild id in which the error was caused\n */\nexport function emitBulkOverwriteError(error: unknown, guildId: string | null) {\n\tconst { client } = container;\n\n\tif (client.listenerCount(Events.ApplicationCommandRegistriesBulkOverwriteError)) {\n\t\tclient.emit(Events.ApplicationCommandRegistriesBulkOverwriteError, error, guildId);\n\t} else if (guildId) {\n\t\tbulkOverwriteError(`Failed to overwrite guild application commands for guild ${guildId}`, error);\n\t} else {\n\t\tbulkOverwriteError(`Failed to overwrite global application commands`, error);\n\t}\n}\n"]}