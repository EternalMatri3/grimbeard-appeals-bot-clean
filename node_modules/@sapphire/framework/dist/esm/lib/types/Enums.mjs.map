{"version":3,"sources":["../../../../src/lib/types/Enums.ts"],"names":["CooldownLevel","PluginHook","BucketScope","RegisterBehavior","InternalRegistryAPIType","CommandOptionsRunTypeEnum","CommandPreConditions"],"mappings":"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","file":"Enums.mjs","sourcesContent":["export enum CooldownLevel {\n\tAuthor = 'author',\n\tChannel = 'channel',\n\tGuild = 'guild'\n}\n\nexport enum PluginHook {\n\tPreGenericsInitialization = 'preGenericsInitialization',\n\tPreInitialization = 'preInitialization',\n\tPostInitialization = 'postInitialization',\n\tPreLogin = 'preLogin',\n\tPostLogin = 'postLogin'\n}\n\n/**\n * The scope the cooldown applies to.\n */\nexport enum BucketScope {\n\t/**\n\t * Per channel cooldowns.\n\t */\n\tChannel,\n\t/**\n\t * Global cooldowns.\n\t */\n\tGlobal,\n\t/**\n\t * Per guild cooldowns.\n\t */\n\tGuild,\n\t/**\n\t * Per user cooldowns.\n\t */\n\tUser\n}\n\nexport enum RegisterBehavior {\n\tOverwrite = 'OVERWRITE',\n\tLogToConsole = 'LOG_TO_CONSOLE',\n\t/**\n\t * Finds all differences in the commands provided using our internal computation method, and logs them to the console, while applying them.\n\t *\n\t * @danger This can potentially cause slowdowns when booting up your bot as computing differences on big commands can take a while.\n\t * We recommend you use `OVERWRITE` instead in production.\n\t */\n\tVerboseOverwrite = 'VERBOSE_OVERWRITE',\n\t/**\n\t * Makes Sapphire handle all command registrations, removals, and updates for you.\n\t *\n\t * This mode can only be set as the **default** behavior, and cannot be set per-command.\n\t *\n\t * In this mode:\n\t * - any `idHints` set per-command are no longer respected, and can be omitted.\n\t * - any `behaviorWhenNotIdentical` that are set per-command are no longer respected, and can be omitted.\n\t * - any application commands that are *not* registered through Sapphire's {@link ApplicationCommandRegistry} are removed from the application.\n\t * \t- the same applies for guild commands, but only for guilds that are registered in the registry via `guildIds`.\n\t */\n\tBulkOverwrite = 'BULK_OVERWRITE'\n}\n\nexport enum InternalRegistryAPIType {\n\tChatInput,\n\tContextMenu\n}\n\n/**\n * The allowed values for {@link CommandOptions.runIn} as an enum.\n * @since 2.0.0\n */\nexport enum CommandOptionsRunTypeEnum {\n\tDm = 'DM',\n\tGuildText = 'GUILD_TEXT',\n\tGuildVoice = 'GUILD_VOICE',\n\tGuildNews = 'GUILD_NEWS',\n\tGuildNewsThread = 'GUILD_NEWS_THREAD',\n\tGuildPublicThread = 'GUILD_PUBLIC_THREAD',\n\tGuildPrivateThread = 'GUILD_PRIVATE_THREAD',\n\tGuildAny = 'GUILD_ANY'\n}\n\n/**\n * The available command pre-conditions.\n * @since 2.0.0\n */\nexport enum CommandPreConditions {\n\tCooldown = 'Cooldown',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tDirectMessageOnly = 'DMOnly',\n\tRunIn = 'RunIn',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildNewsOnly = 'GuildNewsOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildNewsThreadOnly = 'GuildNewsThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildOnly = 'GuildOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildPrivateThreadOnly = 'GuildPrivateThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildPublicThreadOnly = 'GuildPublicThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildTextOnly = 'GuildTextOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildVoiceOnly = 'GuildVoiceOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildThreadOnly = 'GuildThreadOnly',\n\tNotSafeForWork = 'NSFW',\n\tClientPermissions = 'ClientPermissions',\n\tUserPermissions = 'UserPermissions'\n}\n"]}